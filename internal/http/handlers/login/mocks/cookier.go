// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	user "github.com/SapolovichSV/durak/auth/internal/entities/user"
)

// cookier is an autogenerated mock type for the cookier type
type cookier struct {
	mock.Mock
}

// Login provides a mock function with given fields: _a0, w
func (_m *cookier) Login(_a0 user.User, w http.ResponseWriter) error {
	ret := _m.Called(_a0, w)

	if len(ret) == 0 {
		panic("no return value specified for Login")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(user.User, http.ResponseWriter) error); ok {
		r0 = rf(_a0, w)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newCookier creates a new instance of cookier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newCookier(t interface {
	mock.TestingT
	Cleanup(func())
}) *cookier {
	mock := &cookier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
